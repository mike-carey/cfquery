// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package util

import (
	"github.com/cloudfoundry-community/go-cfclient"
	"github.com/mike-carey/cfquery/logger"
	"github.com/pkg/errors"
)

func OrgFilterBy(items []cfclient.Org, check func(cfclient.Org) (bool, error)) ([]cfclient.Org, error) {
	pool := make([]cfclient.Org, 0)

	for _, item := range items {
		ok, err := check(item)
		if err != nil {
			logger.Errorf("Could not check filter on: %v", item)
			return nil, errors.Wrap(err, "Could not check filter for item")
		}

		if ok {
			logger.Infof("Adding item to entry")
			pool = append(pool, item)
		}
	}

	logger.Infof("Returning filtered slice of size %d", len(pool))
	return pool, nil
}

func OrgFilterMapBy(items map[string]cfclient.Org, check func(cfclient.Org) (bool, error)) (map[string]cfclient.Org, error) {
	pool := make(map[string]cfclient.Org, 0)

	for key, item := range items {
		ok, err := check(item)
		if err != nil {
			logger.Errorf("Could not check filter on: %v", item)
			return nil, errors.Wrap(err, "Could not check filter for item")
		}

		if ok {
			logger.Infof("Adding %s to entry", key)
			pool[key] = item
		}
	}

	logger.Infof("Returning filtered map of size %d", len(pool))
	return pool, nil
}
